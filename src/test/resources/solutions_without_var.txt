check_uses_variables.examples.json (len(inp1))
count_substring.examples.json (inp1.count(inp2))
divide_by_3.examples.json (inp1 // 3)
get_first_charachters.examples.json (inp1[0] + inp2[0])
remove_outer_characters.examples.json (name[1:-1])
reverse_list.examples.json ((" ".join(s))[::-1].split(" "))
reverse_string.examples.json (s[::-1])
rotate_left.examples.json ((s + s)[count:count + len(s)])
count_characters_wrong.examples.json (len(inp1))
count_sub_strings_wrong1.examples.json (inp1.count(inp2))
count_sub_strings_wrong2.examples.json (inp1.count(inp2))
divide_by_3_bester.examples.json (inp1 // 3)
get_first_charachters_bester.examples.json (inp1[0] + inp2[0])
reverse_list_bester.examples.json ((" ".join(s))[::-1].split(" "))
reverse_string_bester.examples.json (s[::-1])
rotate_left_bester1.examples.json ((s + s)[count:count + len(s)])
rotate_left_bester2.examples.json ((s + s)[count:count + len(s)])
count_sub_strings_wrong_exclude.examples.json (inp1.upper().count(inp2.upper()))
count_substring_exclude_part_of_correct_solution.examples.json (inp1.upper().count(inp2.upper()))
count_substring_retain.examples.json (inp1.upper().count(inp2.upper()))
count_substring_wrong_retain.examples.json (inp1.upper().count(inp2.upper()))
divide_by_3_exclude.examples.json (inp1 // 3)