11604909.sl,1,(str.++ (str.at _arg_0 (+ -1 (str.indexof _arg_0 "." 1))) (str.++ "." (str.at _arg_0 (+ 1 (str.indexof _arg_0 "." 1))))))
12948338.sl,0,(ite (str.contains _arg_1 (str.at _arg_0 1)) 2 (ite (str.suffixof _arg_1 _arg_0) 3 1)))
17212077.sl,0,(str.++ (str.substr _arg_0 0 (+ 1 1)) (str.++ "/" (str.++ (int.to.str (+ 1 1)) (str.++ (int.to.str 0) (ite (str.contains _arg_0 (str.++ "/" (int.to.str 0))) (ite (= -1 (str.indexof _arg_0 (int.to.str 1) 1)) (str.++ (int.to.str 0) (int.to.str (+ -1 (str.len _arg_0)))) (int.to.str (+ 1 (str.len _arg_0)))) (str.++ (int.to.str 1) (int.to.str (+ 1 (+ 1 1))))))))))
19274448.sl,0,(str.contains _arg_0 "9999999"))
19558979.sl,0,(ite (= _arg_1 1) (str.at _arg_0 0) (ite (= _arg_1 2) (str.at _arg_0 1) (ite (= _arg_1 5) (str.at _arg_0 4) (ite (= _arg_1 3) (str.at _arg_0 2) (str.at _arg_0 3))))))
2171308.sl,0,(str.++ (str.at _arg_0 0) (str.substr _arg_0 (str.indexof _arg_0 " " 1) (str.len _arg_0))))
23435880.sl,0,(ite (str.prefixof _arg_1 _arg_0) (+ 1 1) (str.indexof _arg_0 _arg_1 1)))
25239569.sl,0,(ite (str.contains _arg_0 "DRS") (str.replace _arg_0 "DRS" "Direct Response") (ite (str.contains _arg_0 "BRD") (str.replace _arg_0 "BRD" "Branding") (str.replace _arg_0 "LDS" "Leads"))))
28627624_1.sl,2,(str.substr _arg_0 0 (+ -1 (str.indexof _arg_0 "-" 1))))
30732554.sl,0,(ite (str.contains _arg_0 " ") (str.substr _arg_0 0 (str.indexof _arg_0 "|" 1)) _arg_0))
31753108.sl,4,(str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 5))) (str.++ (str.at _arg_0 (+ 2 (str.indexof _arg_0 " " 5))) (str.++ (str.at _arg_0 (+ 3 (str.indexof _arg_0 " " 5))) (ite (str.contains _arg_0 (int.to.str (+ 3 5))) (ite (= 4 (str.indexof _arg_0 " " 0)) (str.++ (int.to.str (str.indexof _arg_0 (str.substr _arg_0 3 2) 4)) (str.++ (int.to.str 3) (str.++ (int.to.str (str.indexof (str.replace _arg_0 " " _arg_0) " " 0)) (str.++ (int.to.str (+ 2 5)) (int.to.str 3))))) (str.++ (str.at _arg_0 (+ 3 (+ 5 5))) (str.++ (int.to.str (ite (str.prefixof " " _arg_0) 4 0)) (str.++ (int.to.str (+ 4 5)) (str.++ (int.to.str (str.indexof _arg_0 " " 5)) (str.++ (int.to.str (str.indexof (str.replace _arg_0 " " _arg_0) " " 5)) (str.++ (int.to.str (str.indexof (str.replace _arg_0 " " _arg_0) " " 5)) (str.++ (int.to.str (str.indexof _arg_0 (str.at _arg_0 0) 5)) (str.++ (int.to.str (str.indexof _arg_0 (str.at _arg_0 0) 5)) (str.++ (int.to.str (str.indexof _arg_0 " " 5)) (str.++ (int.to.str (ite (str.prefixof " " _arg_0) 0 5)) (str.++ (int.to.str 2) (int.to.str 1))))))))))))) (str.++ (int.to.str 2) (int.to.str (+ 1 (+ 5 5)))))))))
33619752.sl,1,(ite (str.contains "Corporation" (str.at _arg_0 1)) (str.++ (str.at _arg_0 0) (str.++ (str.substr _arg_0 1 (str.len "Company")) (ite (str.suffixof (str.at "Company" 1) _arg_0) "" (ite (str.contains _arg_0 (str.at "Enterprises" 0)) "" (str.at "Corporation" (str.len "Company")))))) (ite (= -1 (str.indexof _arg_0 "Company" 1)) (str.++ (ite (str.contains _arg_0 "Inc") (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.len "Corporation"))) (str.at "Corporation" (str.len "Company"))) (str.at "Corporation" (+ 1 1))) (str.at "Enterprises" (str.len "Company"))) (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.len "Corporation"))) (str.at "Corporation" (str.len "Company"))) (str.at "Corporation" (+ 1 1))) (str.at "Enterprises" (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (str.len "Corporation"))) (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.len "Corporation"))) (str.at "Corporation" (str.indexof _arg_0 " " 1))) (str.at "Corporation" (+ 1 1))) (str.at "Enterprises" (str.indexof _arg_0 " " 1))) (str.at _arg_0 (str.len "Corporation"))))))
34801680.sl,193,(ite (str.contains _arg_0 "Name") (str.replace _arg_0 (str.++ "Name" (str.++ "=" " ")) "") (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " "Name") "=" (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (str.len (str.++ "Name" "Name")))) " ") (str.at _arg_0 (+ (str.indexof _arg_0 " " 1) (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (str.indexof (str.++ "Name" (str.replace _arg_0 " " "Name")) "=" 1))) (str.at _arg_0 (str.len (str.++ "Name" (str.++ "Name" "Name"))))) (str.at _arg_0 (str.indexof (str.++ "Name" (str.replace _arg_0 " " "Name")) " " 1))) (str.at _arg_0 (- (str.len _arg_0) (str.indexof _arg_0 " " 1)))) (str.at (str.++ "Name" _arg_0) (str.len _arg_0))) (str.at "Name" (str.indexof (str.replace _arg_0 " " "") "=" 1))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len (str.replace _arg_0 "Name" _arg_0)))))))
35016216.sl,0,(ite (str.contains _arg_0 "C0") _arg_0 _arg_1))
35744094.sl,0,(ite (str.contains _arg_0 "microsoft") (ite (str.contains _arg_0 "windows") "windows" "microsoft") "mac"))
36462127.sl,291,(str.++ (str.++ (ite (= 1 (str.indexof _arg_0 "/" 1)) (str.at _arg_0 (+ 1 (str.indexof (str.replace (str.replace _arg_0 "/" " ") "/" " ") "/" 1))) "") (str.at (str.replace _arg_0 "/" _arg_0) (+ -1 (str.len _arg_0)))) (str.substr (str.replace _arg_0 "/" _arg_0) (str.len _arg_0) (str.indexof _arg_0 "/" 1))))
37281007.sl,0,(str.contains _arg_0 _arg_1))
37534494.sl,0,(ite (str.contains _arg_0 _arg_2) _arg_0 _arg_1))
38664547.sl,0,(ite (str.suffixof "that" _arg_0) (ite (= -1 (str.indexof "that" _arg_0 0)) (str.replace _arg_0 "that" "") _arg_0) (str.replace _arg_0 "that" "")))
38871714.sl,147,(ite (str.contains (str.replace _arg_0 "<" "") "<") (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.replace (str.substr _arg_0 0 (str.indexof _arg_0 ">" 1)) "<" "") (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " _arg_0)) "<" 1))) (str.replace " " (str.at _arg_0 1) (str.replace _arg_0 "<" " "))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "<" _arg_0) "<" (str.indexof _arg_0 ">" 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) ">" 1))) " ") (str.at _arg_0 (+ -1 (str.indexof _arg_0 " " 1)))) (str.at (str.replace _arg_0 " " "") 1)) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " _arg_0)) ">" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "<" _arg_0) (str.++ ">" " ") 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "<" _arg_0) ">" 1))) (str.at (str.replace _arg_0 ">" _arg_0) (str.len _arg_0))) (str.replace " " (str.at _arg_0 1) _arg_0)) (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "<" "") "<" 1)))) (str.replace " " (str.at _arg_0 1) ">")) (str.at _arg_0 (+ 1 (str.indexof _arg_0 "<" (str.indexof _arg_0 ">" 1))))) (str.replace (str.at _arg_0 1) " " (str.replace _arg_0 "<" ">"))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) " " 1))) (str.at _arg_0 (- -1 (- 1 (str.indexof _arg_0 ">" 1))))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 ">" _arg_0)) ">" 1))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "<" "") "<" 1)))) (str.at _arg_0 (str.indexof (str.++ (str.replace _arg_0 ">" "") ">") ">" 1))) (str.replace " " (str.at _arg_0 1) (str.++ _arg_0 _arg_0))) (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 "<" 1))))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 ">" "")) ">" 1))) (str.replace " " (str.at _arg_0 1) (str.replace _arg_0 ">" ""))) (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 " " "<") " " 1)))) (str.replace " " (str.at _arg_0 1) (str.replace _arg_0 "<" _arg_0))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "<" (str.indexof _arg_0 ">" 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "<" _arg_0) (str.++ ">" " ") 1))) (str.at (str.replace _arg_0 " " _arg_0) (+ -1 (str.len _arg_0)))) (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))) (str.at (str.replace _arg_0 " " _arg_0) (+ 1 (str.len _arg_0)))) (str.at (str.replace _arg_0 " " _arg_0) (str.indexof _arg_0 ">" 1))) (str.at _arg_0 (+ -1 (str.len _arg_0)))) (str.replace (str.replace _arg_0 "<" "") ">" "")))
39060015.sl,41,(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 "/" 0)) (str.++ (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 "/" " ") "/" 1))) (ite (str.suffixof "/" _arg_0) "" (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "/" 0)) (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "/" 1)) (str.++ (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0)) (str.++ " " (str.++ (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 " " _arg_0) "/" 0))) (str.++ (str.substr _arg_0 1 (str.indexof (str.replace _arg_0 "/" "") " " 1)) (str.++ (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0)) (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) " " 1)) (str.++ (str.at _arg_0 (- -1 (- 1 (str.len _arg_0)))) (str.at _arg_0 (+ -1 (str.len _arg_0))))))))))))))))
40498040.sl,0,(str.prefixof _arg_0 (str.replace _arg_0 "overhead" "")))
41503046.sl,2,(str.++ (str.substr _arg_0 0 (str.indexof _arg_0 " " 1)) (ite (str.contains _arg_0 (str.++ (str.at "ssp." 1) " ")) (ite (= -1 (str.indexof _arg_0 "ssp." 1)) "" (ite (str.contains "ssp." (str.at _arg_0 (str.len "ssp."))) (str.++ " " (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) " " 1)) (str.++ (str.at _arg_0 (+ 1 (str.len "ssp."))) (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "ssp." 1)) (str.++ (str.at _arg_0 (str.indexof (str.++ "ssp." _arg_0) " " 1)) (str.++ (str.at "ssp." (+ 1 1)) (str.++ (str.at _arg_0 (str.len (str.replace _arg_0 "ssp." ""))) (str.++ (str.at _arg_0 (str.len (str.replace _arg_0 "ssp." " "))) (str.++ (str.at _arg_0 (+ 1 (str.len "ssp."))) (str.at "ssp." 1)))))))))) (str.++ " " (str.++ (str.at _arg_0 (str.indexof (str.++ "ssp." _arg_0) " " 1)) (str.++ (str.at _arg_0 (str.len "ssp.")) (str.++ (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0)) (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (str.at (str.++ "ssp." _arg_0) (str.len _arg_0)) (str.++ (str.at _arg_0 (+ -1 (str.len _arg_0))) (str.++ (str.at _arg_0 (str.len "ssp.")) (str.at "ssp." 1))))))))))) "")))
43120683.sl,1,(str.++ (str.at _arg_0 0) (ite (str.suffixof "1" (str.replace _arg_0 "2" "1")) (str.++ (str.at _arg_0 1) (ite (= -1 (str.indexof _arg_0 "1" 1)) (str.++ (str.at "oranges" 0) (str.++ " " "bananas")) (str.++ (str.at _arg_0 (+ 1 1)) (str.++ " " "apple")))) (str.++ (str.at _arg_0 1) (str.++ (str.at _arg_0 (+ 1 1)) (str.++ (str.at _arg_0 (str.to.int "3")) (ite (str.suffixof "1" (str.replace _arg_0 "4" "1")) (str.++ " " "oranges") (str.++ (str.at _arg_0 (str.to.int "3")) (str.++ " " "strawberries")))))))))
43606446.sl,143,(str.++ (str.at _arg_0 (- -1 (+ 1 (- 1 (str.indexof _arg_0 ">" 1))))) (str.++ (str.at _arg_0 (- -1 (- 1 (str.indexof _arg_0 ">" 1)))) (str.at _arg_0 (+ -1 (str.indexof _arg_0 ">" 1))))))
44789427.sl,3,(str.++ (str.substr _arg_0 (- _arg_1 2) _arg_1) (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 "-" _arg_1)) (ite (str.prefixof (str.at _arg_0 _arg_1) _arg_0) (str.++ (str.at _arg_0 _arg_1) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 "-" _arg_1))) (str.substr _arg_0 1 (+ _arg_1 1)))) (str.++ (str.substr _arg_0 _arg_1 _arg_1) (str.++ (int.to.str (- (str.indexof _arg_0 "-" _arg_1) _arg_1)) (str.++ (str.at _arg_0 2) (str.++ (int.to.str 2) (str.++ (int.to.str (- _arg_1 2)) (str.substr _arg_0 (+ _arg_1 1) _arg_1))))))))))
add-a-line-break-with-a-formula.sl,0,(str.++ (str.++ (str.++ (str.++ _arg_0 "/n") _arg_1) "/n") _arg_2))
cell-contains-all-of-many-things.sl,0,(str.contains _arg_0 _arg_3))
cell-contains-number.sl,0,(str.contains (str.replace _arg_0 "1" "2") "2"))
cell-contains-one-of-many-things.sl,0,(str.contains _arg_0 _arg_1))
cell-contains-one-of-many-with-exclusions.sl,0,(str.contains _arg_0 _arg_2))
cell-contains-some-words-but-not-others.sl,0,(str.contains _arg_0 _arg_1))
cell-contains-specific-text.sl,0,(str.contains _arg_0 _arg_1))
cell-equals-one-of-many-things.sl,515,(str.contains "yellow" (str.replace (str.replace (str.replace _arg_0 "orange" "") "blue" "") "pink" "")))
change-negative-numbers-to-positive.sl,0,(str.replace _arg_0 "-" ""))
clean-and-reformat-telephone-numbers.sl,27,(ite (str.contains _arg_0 (int.to.str 1)) (str.replace (str.replace _arg_0 "-" "") "-" "") (ite (str.contains _arg_0 "-") (str.++ (str.substr _arg_0 1 (+ 1 1)) (str.++ (int.to.str (+ -1 (str.indexof _arg_0 "-" 1))) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (int.to.str (str.indexof _arg_0 " " 1)) (str.++ (int.to.str (str.indexof _arg_0 ">" 1)) (str.++ (int.to.str 0) (str.++ (int.to.str (- 1 (str.indexof _arg_0 "." 1))) (str.++ (str.at (str.replace _arg_0 "<" "") 0) (str.at _arg_0 1))))))))) (str.replace (str.replace _arg_0 "." "") "." ""))))
compare-two-strings.sl,0,(str.contains _arg_0 _arg_1))
convert-numbers-to-text.sl,0,(int.to.str _arg_0))
convert-text-to-numbers.sl,0,(str.to.int _arg_0))
count-consecutive-monthly-orders.sl,3,(ite (str.contains (str.replace _arg_0 "0" "") "0") (ite (str.suffixof (int.to.str (+ 1 1)) _arg_0) (+ 1 1) (str.indexof _arg_0 " " (str.indexof _arg_0 "0" 1))) (ite (str.suffixof _arg_0 (str.replace _arg_0 "0" _arg_0)) (str.indexof _arg_0 (str.at _arg_0 0) 1) (str.indexof (str.++ " " (str.replace _arg_0 " " "0")) " " 1))))
count-line-breaks-in-cell.sl,0,(ite (str.prefixof _arg_0 (str.replace _arg_0 "/n" _arg_0)) 1 (ite (str.contains (str.replace _arg_0 "/n" "") "/n") (str.indexof _arg_0 "/n" 1) (str.len "/n"))))
count-specific-characters-in-a-cell.sl,0,(ite (str.contains _arg_0 _arg_1) (ite (str.suffixof _arg_1 _arg_0) 1 (+ 1 1)) 0))
count-specific-words-in-a-cell.sl,0,(ite (str.contains _arg_0 _arg_1) (+ 1 1) 0))
count-total-characters-in-a-cell.sl,0,(str.len _arg_0))
count-total-words-in-a-cell.sl,2,(ite (str.contains (str.replace _arg_0 " " "") " ") (ite (str.contains (str.replace _arg_0 " " "") (str.substr _arg_0 1 (str.indexof _arg_0 " " 1))) (str.indexof _arg_0 " " 1) (- -1 (- 1 (str.indexof _arg_0 " " 1)))) (+ 1 1)))
create-email-address-from-name.sl,0,(str.++ (str.++ (str.at _arg_1 0) _arg_0) "_acme.com"))
create-email-address-with-name-and-domain.sl,0,(str.++ (str.at _arg_0 0) (str.++ _arg_1 (str.++ "_" _arg_2))))
exceljet1.sl,88,(ite (str.suffixof (str.at _arg_0 1) _arg_1) (str.substr _arg_1 (str.indexof _arg_0 " " 1) (str.len _arg_1)) (str.++ (str.at _arg_1 (+ 1 (str.indexof _arg_1 "_" 1))) (ite (= 1 (str.indexof _arg_0 (str.at _arg_1 1) 1)) (str.++ (str.at _arg_1 (+ 1 (+ 1 (str.len _arg_0)))) (str.++ (str.at (str.replace _arg_1 "_" _arg_1) (str.len _arg_1)) (str.++ (str.at (str.replace _arg_0 " " _arg_1) (str.indexof _arg_1 "_" 1)) (str.++ (str.at _arg_1 (+ 1 (+ 1 1))) (str.++ (str.at (str.replace _arg_0 " " _arg_1) (str.len _arg_1)) (str.++ (str.at _arg_0 (- -1 (- 1 (str.indexof _arg_1 "_" 1)))) (str.at _arg_1 (+ -1 (str.len _arg_1))))))))) (str.++ (str.at (str.replace _arg_1 "_" " ") (str.len _arg_0)) (str.substr _arg_1 (str.len _arg_0) (str.len _arg_0)))))))
exceljet2.sl,13,(str.++ (str.++ (ite (str.prefixof "." (str.at (str.replace _arg_0 "." _arg_0) (str.len _arg_0))) (ite (str.prefixof (str.at _arg_0 1) _arg_0) "" (str.at _arg_0 (+ 1 (str.indexof _arg_0 "." 1)))) (str.at (str.replace _arg_0 "." _arg_0) (str.len _arg_0))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
exceljet3.sl,30,(str.++ (str.++ (str.++ (ite (= -1 (str.indexof _arg_0 (int.to.str (+ 1 1)) 1)) (ite (str.suffixof " " (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 1) (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 " " 1))))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 " " _arg_0) " " 1)))) (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 "=" _arg_0) " " 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" "") " " (str.indexof _arg_0 " " 1)))) (str.replace (str.replace _arg_0 (int.to.str 1) _arg_0) _arg_0 " ")) (str.at (str.replace _arg_0 "=" _arg_0) (str.len _arg_0))) (str.at _arg_0 (+ (str.indexof _arg_0 " " 1) (str.indexof _arg_0 "=" 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 "=" _arg_0)) " " 1))) (str.++ (str.++ (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))) (str.at (str.replace _arg_0 "=" _arg_0) (str.len _arg_0))) (str.at (str.replace _arg_0 "=" _arg_0) (str.indexof _arg_0 " " 1)))) (ite (str.contains _arg_0 (int.to.str 1)) (int.to.str (+ 1 1)) (str.++ (int.to.str (+ 1 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "=" 1))))) (str.at _arg_0 (str.indexof _arg_0 (int.to.str 0) 1))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
exceljet4.sl,51,(str.++ (str.++ (str.++ (ite (str.contains (int.to.str (str.len _arg_0)) (int.to.str 1)) (str.++ (ite (str.suffixof (int.to.str 1) (int.to.str (str.len _arg_0))) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (+ -1 (str.len _arg_0))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "/" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "/" 1))) (str.at (str.replace _arg_0 "/" _arg_0) (+ -1 (str.len _arg_0)))) (str.at _arg_0 (+ 1 (+ 1 (+ 1 1))))) (str.at (str.replace _arg_0 "/" _arg_0) (+ -1 (str.len _arg_0)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "=" _arg_0)) "=" 1))) (str.at _arg_0 (- 1 (str.indexof _arg_0 (int.to.str 1) 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1))) (str.++ (str.++ (str.++ (int.to.str (+ 1 (str.indexof _arg_0 (int.to.str 0) 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "=" _arg_0)) "=" 1))) (str.at _arg_0 (str.indexof _arg_0 (int.to.str 0) 1)))) (str.at _arg_0 (+ -1 (str.indexof _arg_0 (int.to.str 0) 1)))) (ite (str.contains _arg_0 (str.++ (str.at _arg_0 1) "/")) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "/" 1)) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1)))) (str.at (str.replace _arg_0 "/" _arg_0) (+ -1 (str.len _arg_0)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "/" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "/" _arg_0) "/" 1))) (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 "/" _arg_0) "/" 1)))) (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 "/" 1))))) (str.at _arg_0 (+ 1 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "=" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 "/" 1))))) (str.at _arg_0 1)) (str.replace (str.replace _arg_0 (int.to.str 0) "") _arg_0 "/")) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1))) (str.at (str.replace _arg_0 "=" _arg_0) (+ 1 (str.len _arg_0)))) (str.at _arg_0 (str.indexof _arg_0 (str.at _arg_0 1) (+ 1 1)))) (str.at (str.replace _arg_0 "/" _arg_0) (str.len _arg_0))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "/" _arg_0) "/" 1))) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "=" 1)) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" _arg_0) "/" 1))) (str.at _arg_0 (+ -1 (str.len _arg_0)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "=" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "=" _arg_0)) "=" 1))) (str.at (str.replace _arg_0 "/" _arg_0) (+ -1 (str.len _arg_0)))) (str.at (str.replace _arg_0 "=" (str.replace _arg_0 "/" _arg_0)) (str.len _arg_0))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "=" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 "/" (str.replace _arg_0 "/" _arg_0)) "/" 1))) (str.at (str.replace _arg_0 "/" _arg_0) (str.len _arg_0))) (str.at (str.replace _arg_0 "=" _arg_0) (str.len _arg_0))))) (str.at _arg_0 (str.indexof _arg_0 (int.to.str 0) 1))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
extract-nth-word-from-text-string.sl,104,(ite (str.contains (str.substr _arg_0 1 _arg_1) " ") (ite (= _arg_1 (str.indexof _arg_0 " " _arg_1)) (str.++ (str.at _arg_0 (+ _arg_1 (+ _arg_1 (+ 1 1)))) (str.at _arg_0 1)) (str.++ (str.++ (str.++ (str.substr _arg_0 (+ _arg_1 1) (+ 1 1)) (str.substr _arg_0 (str.indexof _arg_0 (str.at _arg_0 0) _arg_1) _arg_1)) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) " " _arg_1))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0)))))) (ite (= _arg_1 1) (str.substr _arg_0 0 (str.indexof _arg_0 " " _arg_1)) (str.substr _arg_0 (+ _arg_1 _arg_1) (+ _arg_1 1)))))
extract-text-between-parentheses.sl,360,(str.to.int (str.substr _arg_0 (str.indexof (str.++ " " _arg_0) "<" 1) (+ 1 1))))
extract-word-containing-specific-text.sl,8,(str.++ (str.++ (ite (str.suffixof " " (str.substr _arg_0 4 4)) (str.++ (str.++ (str.substr _arg_0 (+ 4 4) 4) (str.substr _arg_0 (str.indexof _arg_0 "_" 1) 4)) (str.at _arg_0 (+ 2 (str.indexof _arg_0 "." 1)))) (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (- (str.indexof _arg_0 "_" 1) 4)) (str.at _arg_0 (- 4 (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (- (str.indexof _arg_0 "_" 1) 2))) (str.at _arg_0 2)) (str.substr _arg_0 (str.indexof _arg_0 "_" 1) 4))) (str.at _arg_0 (+ -1 (str.indexof _arg_0 "." 1)))) (str.substr _arg_0 (str.indexof _arg_0 "." 1) 4)))
extract-word-that-begins-with-specific-character.sl,53,(str.++ (str.substr _arg_0 (str.indexof _arg_0 "_" 1) (+ 2 2)) (str.++ (str.substr _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "_" 1) 2) (ite (= -1 (str.indexof _arg_0 (int.to.str 1) 1)) (str.++ (str.at _arg_0 (+ 2 (str.indexof (str.replace _arg_0 " " _arg_0) "_" 1))) (str.++ (str.at _arg_0 (- (str.indexof _arg_0 " " (str.indexof _arg_0 "_" 1)) 2)) (str.at _arg_0 (+ -1 (str.len _arg_0))))) ""))))
find-nth-occurrence-of-character.sl,6,(ite (= _arg_1 (+ 1 1)) (str.indexof (str.replace _arg_0 " " _arg_0) "_" _arg_1) (ite (= -1 (str.indexof " " "" _arg_1)) (str.indexof (str.replace _arg_0 "_" (str.replace _arg_0 "_" _arg_0)) "_" _arg_1) (str.indexof (str.++ " " _arg_0) "_" _arg_1))))
get-domain-from-email-address_2.sl,0,(str.substr _arg_1 0 (str.indexof _arg_1 "_" 1)))
get-domain-name-from-url.sl,137,(str.++ (ite (str.suffixof "/" (str.substr _arg_0 3 3)) (str.substr _arg_0 0 (str.indexof _arg_0 "/" (+ 1 (+ 3 3)))) (str.substr _arg_0 0 (- (str.len _arg_0) 3))) (str.substr "/" 0 (str.indexof _arg_0 (str.at _arg_0 0) 1))))
get-first-name-from-name.sl,0,(str.substr _arg_0 0 (str.indexof _arg_0 " " 1)))
get-first-name-from-name-with-comma.sl,3,(ite (= _arg_1 2) (str.substr _arg_0 0 (str.indexof _arg_0 "," _arg_1)) (str.++ (str.++ (ite (= _arg_1 (str.len (int.to.str (str.len _arg_0)))) (str.at _arg_0 (+ _arg_1 (str.indexof _arg_0 "," _arg_1))) (str.++ (str.++ (str.at _arg_0 (+ _arg_1 (str.indexof _arg_0 "," _arg_1))) (str.at _arg_0 (+ 2 (str.indexof _arg_0 "," _arg_1)))) (str.at _arg_0 (+ 1 (str.indexof _arg_0 "," _arg_1))))) (str.at _arg_0 (- (str.len _arg_0) 2))) (str.at _arg_0 (+ -1 (str.len _arg_0))))))
get-first-word.sl,0,(str.substr _arg_0 0 (str.indexof _arg_0 " " 1)))
get-last-line-in-cell.sl,600,N/A
get-last-name-from-name.sl,4,(str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (+ -1 (str.len _arg_0))))))
get-last-name-from-name-with-comma.sl,14,(str.++ (str.++ (str.substr _arg_0 (+ 1 (str.indexof _arg_0 "," 1)) (str.len _arg_0)) ",") (str.substr _arg_0 0 (str.indexof _arg_0 "," 1))))
get-last-word.sl,79,(str.++ (str.++ (str.++ (ite (str.contains _arg_0 (str.++ " " (str.at _arg_0 (+ 1 1)))) (str.at _arg_0 (+ 1 1)) (str.at (str.replace _arg_0 " " _arg_0) (+ 1 (str.len _arg_0)))) (str.at _arg_0 (- -1 (+ 1 (- 1 (str.len _arg_0)))))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
get-middle-name-from-full-name.sl,5,(ite (str.suffixof " " (str.substr (str.replace _arg_0 " " _arg_0) 0 (str.len _arg_0))) (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " "") " " 1)) (ite (str.suffixof " " (str.substr _arg_0 0 (str.indexof (str.replace _arg_0 " " _arg_0) " " 1))) (str.at _arg_0 (+ -1 (str.indexof _arg_0 " " 1))) ""))) (ite (str.suffixof (str.at _arg_0 1) _arg_0) (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " "") " " 1)) (str.++ " " (str.++ (str.at _arg_0 (+ 1 1)) (str.++ (str.at _arg_0 (+ 1 (+ 1 (+ 1 1)))) (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))))))) "")))
join-cells-with-comma.sl,0,(str.++ (str.++ (ite (str.contains _arg_0 _arg_1) (str.++ _arg_0 ",") (str.++ (str.++ (str.++ (str.++ _arg_0 ",") " ") _arg_1) ",")) " ") _arg_2))
join-first-and-last-name.sl,0,(str.++ (str.++ _arg_0 " ") _arg_1))
most-frequently-occurring-text.sl,0,(ite (str.prefixof _arg_0 _arg_1) _arg_0 _arg_2))
phone-5-short.sl,0,(ite (= 3 (str.indexof name " " 0)) (str.substr name 1 2) (ite (= 2 (str.indexof name " " 0)) (str.at name 1) (str.substr name 1 3))))
phone-6-short.sl,0,(ite (= 2 (str.indexof name " " 0)) (str.substr name 3 3) (ite (= 3 (str.indexof name " " 0)) (str.substr name 4 3) (str.substr name 5 3))))
phone-7-short.sl,0,(ite (str.contains name (int.to.str 1)) (ite (str.contains name (int.to.str 3)) (ite (str.contains name (int.to.str 4)) (ite (= 4 (str.indexof name " " 0)) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str 5) (int.to.str (+ 3 5)))) (str.++ (str.at name 2) (str.++ (str.at name 4) (int.to.str (+ 2 5))))) (ite (str.contains name (int.to.str 0)) (str.++ (int.to.str 5) (str.++ (str.at name 5) (str.at name 2))) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 5) (str.at name 5))))) (str.++ (str.at name 5) (str.++ (int.to.str 5) (int.to.str 0)))) (ite (str.contains name (int.to.str 3)) (str.++ (str.++ (int.to.str (+ 4 5)) (str.at name 1)) (int.to.str (+ 4 5))) (str.++ (str.++ (int.to.str (+ 2 5)) (int.to.str (+ 3 5))) (int.to.str (+ 2 5))))))
phone-9-short.sl,0,(str.++ (str.at name 1) (ite (= 3 (str.indexof name " " 0)) (str.++ (str.at name 2) (ite (str.contains name (int.to.str 0)) (str.++ "." (ite (str.contains name (int.to.str 2)) (str.++ (int.to.str 0) (str.++ (str.at name 5) (str.++ (int.to.str 1) (str.++ "." (str.++ (int.to.str 0) (str.++ (int.to.str 5) (str.++ (int.to.str 0) (str.++ "." (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str 5) (int.to.str (+ 1 5)))))))))))) (str.++ (str.substr name 4 3) (str.++ "." (str.++ (str.at name 2) (str.++ (int.to.str 3) (str.++ (int.to.str (+ 2 5)) (str.++ "." (str.++ (int.to.str 4) (str.++ (int.to.str 0) (int.to.str 1))))))))))) (ite (str.contains name (int.to.str 1)) (str.++ "." (str.++ (str.substr name 4 3) (str.++ "." (str.++ (str.at name 5) (str.++ (int.to.str 5) (str.++ (str.at name 5) (str.++ "." (str.++ (str.substr name 1 2) (int.to.str 1))))))))) (str.++ "." (str.++ (str.substr name 4 2) (str.++ (int.to.str (+ 2 5)) (str.++ "." (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 2 5)) (str.++ "." (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str (+ 2 5)) (int.to.str 5)))))))))))))) (ite (= 2 (str.indexof name " " 0)) (str.++ "." (str.++ (str.at name 4) (str.++ (str.substr name 4 2) (str.++ "." (str.++ (int.to.str (+ 4 5)) (str.++ (int.to.str (+ 1 5)) (str.++ (int.to.str (+ 4 5)) (str.++ "." (str.++ (int.to.str 2) (str.++ (int.to.str 3) (int.to.str (+ 3 5)))))))))))) (ite (str.contains name (int.to.str 4)) (str.++ (str.at name 2) (str.++ (str.at name 3) (str.++ "." (str.++ (str.substr name 5 3) (str.++ "." (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str 5) (str.++ (int.to.str (+ 3 5)) (str.++ "." (str.++ (int.to.str 4) (str.++ (int.to.str 3) (int.to.str (+ 3 5))))))))))))) (str.++ (str.at name 2) (str.++ (str.at name 3) (str.++ "." (str.++ (str.at name 5) (str.++ (str.at name 3) (str.++ (str.at name 2) (str.++ "." (str.++ (int.to.str 5) (str.++ (str.at name 5) (str.++ (str.at name 2) (str.++ "." (str.++ (int.to.str (+ 1 5)) (str.++ (int.to.str 3) (int.to.str 2)))))))))))))))))))
position-of-2nd-3rd-etc-instance-of-character.sl,1,(- (str.len _arg_0) _arg_2))
remove-characters-from-left.sl,0,(str.++ (str.substr _arg_0 _arg_1 (+ _arg_1 _arg_1)) (ite (= _arg_1 1) (int.to.str (str.len _arg_0)) "")))
remove-characters-from-right.sl,0,(str.to.int (str.substr _arg_0 0 (str.indexof _arg_0 " " 1))))
remove-file-extension-from-filename.sl,0,(str.substr _arg_0 0 (str.indexof _arg_0 "." 1)))
remove-leading-and-trailing-spaces-from-text.sl,600,N/A
remove-text-by-matching.sl,0,(str.replace (str.replace _arg_0 "-" "") "-" ""))
remove-text-by-position.sl,600,N/A
remove-unwanted-characters.sl,0,(ite (= -1 (str.indexof _arg_0 "" (str.to.int _arg_1))) (str.replace _arg_0 _arg_1 "") (str.replace _arg_0 (str.++ _arg_1 _arg_1) "")))
replace-one-character-with-another.sl,0,(str.replace (str.replace _arg_0 " " "-") " " "-"))
split-numbers-from-units-of-measure_1.sl,0,(str.++ (str.at _arg_0 0) (ite (= _arg_1 3) (int.to.str 0) (ite (= _arg_1 2) "" (str.++ (str.at _arg_0 1) (int.to.str 0))))))
split-numbers-from-units-of-measure_2.sl,0,(ite (= _arg_1 2) (str.at _arg_0 1) (ite (= _arg_1 3) (str.++ (str.at _arg_0 2) (str.substr _arg_0 _arg_1 _arg_1)) (str.at _arg_0 3))))
split-text-and-numbers.sl,0,(str.++ (str.substr _arg_0 0 3) (str.++ (str.substr _arg_0 3 3) (ite (= _arg_1 (+ 3 3)) "" (ite (str.contains _arg_0 (int.to.str 3)) "" (str.at _arg_0 (- _arg_1 2)))))))
split-text-string-at-specific-character.sl,600,N/A
stackoverflow1.sl,32,(ite (str.suffixof "Inc" _arg_0) (str.replace _arg_0 (str.++ " " "Inc") "") (ite (str.contains _arg_0 ",") (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.indexof _arg_0 (str.at "Inc" 1) 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " "") " " 1))) (str.substr _arg_0 0 (str.indexof _arg_0 " " 1)))))
stackoverflow10.sl,0,(ite (= -1 (str.indexof _arg_0 (int.to.str 3) 1)) (ite (= -1 (str.to.int (str.at _arg_0 5))) (ite (= -1 (str.indexof _arg_0 (int.to.str 5) 1)) (ite (= -1 (str.indexof _arg_0 (int.to.str 4) 1)) (ite (= -1 (str.indexof _arg_0 (str.at _arg_0 1) 2)) (ite (= -1 (str.indexof _arg_0 (int.to.str 0) 1)) (ite (= -1 (str.indexof _arg_0 (int.to.str 2) 1)) (ite (str.contains (str.substr _arg_0 3 5) " ") (ite (str.contains (str.substr _arg_0 1 5) " ") (ite (= 5 (str.indexof _arg_0 " " 1)) (ite (str.suffixof " " (str.substr _arg_0 3 5)) (ite (str.contains _arg_0 (int.to.str 5)) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (+ 3 5))) (int.to.str (+ 1 5))) (int.to.str (+ 2 5))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str (+ 4 5)) (int.to.str (+ 4 5)))))) (ite (str.suffixof " " (str.substr _arg_0 4 5)) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str 4)))) (ite (str.contains _arg_0 (int.to.str 0)) (ite (str.contains _arg_0 (int.to.str 5)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str 0)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 2 5)) (int.to.str 0))))) (ite (str.contains _arg_0 (int.to.str 4)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 2 5)) (int.to.str 4)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str (+ 2 5)))))))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str 2) (int.to.str (+ 3 5))))))) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 2) (int.to.str 1)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 4) (int.to.str (+ 3 5))))))) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 2) (int.to.str 1)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 4) (int.to.str (+ 3 5))))))) (ite (str.contains _arg_0 (int.to.str 5)) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (+ 2 5))) (int.to.str (+ 4 5))) (int.to.str (+ 3 5))) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (+ 2 5))) (int.to.str (+ 4 5))) (int.to.str (+ 2 5))))) (ite (str.contains (str.substr _arg_0 3 5) " ") (ite (str.contains (str.substr _arg_0 1 5) " ") (ite (= 5 (str.indexof _arg_0 " " 1)) (ite (str.suffixof " " (str.substr _arg_0 3 5)) (ite (str.contains _arg_0 (int.to.str 5)) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (+ 3 5))) (int.to.str (+ 1 5))) (int.to.str (+ 2 5))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str (+ 4 5)) (int.to.str (+ 4 5)))))) (ite (str.suffixof " " (str.substr _arg_0 4 5)) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str 4)))) (ite (str.contains _arg_0 (int.to.str 0)) (ite (str.contains _arg_0 (int.to.str 5)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str 0)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 2 5)) (int.to.str 0))))) (ite (str.contains _arg_0 (int.to.str 4)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 2 5)) (int.to.str 4)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str (+ 1 5)) (int.to.str (+ 2 5)))))))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 3 5)) (str.++ (int.to.str 2) (int.to.str (+ 3 5))))))) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 2) (int.to.str 1)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 4) (int.to.str (+ 3 5))))))) (ite (str.contains _arg_0 (int.to.str 2)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 2) (int.to.str 1)))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str 4) (int.to.str (+ 3 5))))))) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (+ 2 5))) (int.to.str (+ 4 5))) (int.to.str (+ 3 5))))) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (str.indexof _arg_0 " " 1))) (int.to.str 0)) (int.to.str (+ 1 5)))) (ite (= -1 (str.indexof _arg_0 (int.to.str 0) 1)) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (str.indexof _arg_0 " " 5))) (int.to.str (+ 4 5))) (int.to.str 2)) (str.substr _arg_0 (+ 4 5) 4))) (ite (= -1 (str.indexof _arg_0 (str.at _arg_0 1) 2)) (str.substr _arg_0 (+ 4 5) 4) (ite (= 1 (str.indexof _arg_0 (str.at _arg_0 4) 1)) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (str.indexof _arg_0 " " 5))) (int.to.str 4)) (int.to.str (+ 3 5))) (str.++ (str.++ (str.++ (int.to.str 1) (int.to.str (str.indexof _arg_0 " " 1))) (int.to.str 4)) (int.to.str 4))))) (ite (= 5 (str.indexof _arg_0 " " 1)) (ite (str.suffixof " " (str.substr _arg_0 4 5)) (str.substr _arg_0 (+ 4 5) 4) (str.substr _arg_0 (+ 3 5) 4)) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 2 5)) (str.++ (int.to.str (+ 4 5)) (int.to.str (+ 3 5))))))) (str.substr _arg_0 (+ 3 5) 4)) (str.substr _arg_0 (+ 4 5) 4)))
stackoverflow11.sl,600,N/A
stackoverflow2.sl,1,(ite (str.suffixof (str.at _arg_0 1) _arg_0) (str.++ (str.++ (str.substr _arg_0 0 (str.indexof _arg_0 "in" 1)) "in") (str.at _arg_0 (+ -1 (str.indexof _arg_0 " " 1)))) (str.substr _arg_0 0 (str.indexof _arg_0 " " 1))))
stackoverflow3.sl,245,(ite (str.suffixof " " _arg_0) "" (str.++ (str.substr _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "9" 1) 2) (str.++ (str.substr _arg_0 (str.to.int (str.++ "1" "9")) 3) (str.++ (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "9" _arg_0) "9" 1))) (str.++ (str.at (str.replace _arg_0 "1" _arg_0) (str.len _arg_0)) (str.++ (str.substr _arg_0 1 (ite (str.suffixof " " _arg_0) 2 1)) (ite (str.prefixof "1" (int.to.str (str.indexof _arg_0 (str.at _arg_0 1) 2))) (str.++ (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "9" _arg_0) "9" 1))) (str.++ (str.substr (str.replace _arg_0 "1" _arg_0) (str.len _arg_0) 2) (str.substr _arg_0 (- (str.len _arg_0) 3) 3))) (str.++ (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "9" _arg_0) "9" 1))) (str.++ (str.substr _arg_0 (str.indexof (str.replace _arg_0 "9" _arg_0) "9" 1) 3) (str.substr _arg_0 (- (str.len _arg_0) 2) 2)))))))))))
stackoverflow4.sl,9,(str.++ (str.substr _arg_0 0 (+ 1 1)) (str.++ (str.at _arg_0 (+ 1 1)) (str.++ " " (ite (str.contains _arg_0 (int.to.str 0)) (str.++ (int.to.str (+ 1 1)) (ite (str.contains _arg_0 (int.to.str (str.indexof _arg_0 "<" 1))) (str.++ (int.to.str 0) (str.++ (int.to.str (str.indexof (str.replace _arg_0 "," "") "," 1)) (str.++ " " (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 "," 1))) (str.++ " " (str.++ (int.to.str (str.indexof _arg_0 "<" 1)) (int.to.str (+ 1 1)))))))) (str.++ (str.at _arg_0 (+ -1 (str.indexof _arg_0 "," 1))) (str.++ (str.at _arg_0 (+ -1 (str.indexof _arg_0 "," 1))) (str.++ " " (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 "," 1))) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 "," 1))) (str.++ " " (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 "," 1))) (int.to.str 0)))))))))) (str.++ (int.to.str 1) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 "," 1))) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 "<" 1))) (str.++ " " (str.++ (int.to.str (+ 1 1)) (str.++ (int.to.str (+ 1 (str.indexof _arg_0 "," 1))) (str.++ " " (int.to.str (str.indexof (str.replace _arg_0 "<" _arg_0) ">" 1))))))))))))))
stackoverflow5.sl,36,(ite (= -1 (str.indexof _arg_0 "0" 1)) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.to.int (str.++ "1" "9")))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " "") " " 1))) (str.replace (str.replace _arg_0 "0" "1") _arg_0 " ")) (str.at (str.replace _arg_0 " " _arg_0) (str.indexof _arg_0 "9" 1))) (str.at (str.replace _arg_0 " " "0") (str.to.int "9"))) (str.at _arg_0 (str.to.int "4"))) (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.to.int (str.++ "1" "1")))) (str.at (str.replace _arg_0 "9" _arg_0) (str.indexof _arg_0 "4" 1)))))
stackoverflow6.sl,103,(str.++ (str.++ (str.++ (str.++ (ite (= -1 (str.indexof _arg_0 " " (str.indexof (str.replace _arg_0 "-" _arg_0) "-" 1))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 "=" "")) "=" 1)) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 "=" "")) "=" 1)) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " _arg_0) "=" (str.indexof _arg_0 "-" 1)))) (str.at _arg_0 (+ -1 (str.indexof (str.replace _arg_0 "-" _arg_0) "-" 1)))) (str.at _arg_0 1)) (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 "-" _arg_0) "-" 1)))) " ") (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 "-" _arg_0)) "-" 1)))) (str.at (str.replace _arg_0 " " _arg_0) (+ -1 (str.len _arg_0)))) (str.at (str.replace _arg_0 " " _arg_0) (str.len _arg_0))) (str.at _arg_0 (- -1 (- 1 (str.len _arg_0))))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
stackoverflow7.sl,0,(ite (str.suffixof _arg_1 _arg_0) (str.++ (str.++ (str.at _arg_0 0) (str.substr _arg_0 1 (str.indexof _arg_0 " " 1))) (int.to.str 1)) (str.replace _arg_0 _arg_1 "")))
stackoverflow8.sl,7,(str.++ (str.++ (str.++ (str.++ (ite (str.suffixof "/" (str.substr _arg_0 2 (+ 4 4))) (str.++ (str.++ (str.substr _arg_0 (+ 2 (+ 4 4)) 2) (str.substr _arg_0 (+ 4 (+ 4 4)) 3)) (int.to.str 1)) (str.++ (str.++ (str.at _arg_0 (+ 3 (+ 4 4))) (str.substr _arg_0 (+ 4 (+ 4 4)) 4)) (int.to.str 1))) (str.at _arg_0 (- (str.len _arg_0) 4))) (str.at _arg_0 (- (str.len _arg_0) 3))) (str.at _arg_0 (- (str.len _arg_0) 2))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
stackoverflow9.sl,83,(str.++ (ite (= 1 (- -1 (- 1 (str.indexof _arg_0 " " 1)))) (str.++ (str.++ (str.++ (str.++ (str.++ (str.++ (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " _arg_0)) " " 1)) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " "")) " " 1))) (str.at _arg_0 (+ 1 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " "")) " " 1)))) (str.at _arg_0 (str.indexof (str.replace _arg_0 " " (str.replace _arg_0 " " (str.replace _arg_0 " " _arg_0))) " " 1))) (str.at (str.replace _arg_0 " " (str.replace _arg_0 " " _arg_0)) (str.len _arg_0))) (str.at _arg_0 (str.indexof (str.replace (str.replace _arg_0 " " "") " " (str.replace _arg_0 " " "")) " " 1))) (str.at (str.replace _arg_0 " " _arg_0) (+ -1 (str.len _arg_0)))) "") (str.substr (str.replace _arg_0 " " _arg_0) (str.len _arg_0) (str.indexof _arg_0 " " 1))))
strip-html-from-text-or-numbers.sl,133,(str.++ (ite (str.contains _arg_0 (int.to.str (+ 1 1))) (str.++ (str.++ (str.++ (str.++ (int.to.str 0) (str.at _arg_0 (str.indexof (str.replace _arg_0 ">" _arg_0) ">" 1))) (int.to.str (- -1 (- 1 (str.indexof _arg_0 "<" 1))))) (int.to.str (+ 1 1))) (str.at (str.replace _arg_0 ">" _arg_0) (str.indexof _arg_0 "<" 1))) (ite (str.suffixof (int.to.str 0) (int.to.str (str.len _arg_0))) (str.++ (str.++ (int.to.str 0) (str.at _arg_0 (str.indexof (str.replace _arg_0 ">" _arg_0) ">" 1))) (str.at (str.replace _arg_0 ">" _arg_0) (str.indexof _arg_0 "<" 1))) (str.++ (str.++ (str.++ (int.to.str 0) (str.at _arg_0 (str.indexof (str.replace _arg_0 ">" _arg_0) ">" 1))) (int.to.str (str.indexof (str.replace _arg_0 ">" _arg_0) ">" 1))) (int.to.str 0)))) (str.at _arg_0 (+ -1 (str.indexof _arg_0 "<" 1)))))
strip-non-numeric-characters.sl,0,(ite (str.contains _arg_0 "%") (ite (= 3 (str.indexof _arg_0 " " 1)) (str.++ (int.to.str 5) (str.++ (int.to.str 0) (int.to.str 0))) (str.++ (int.to.str 0) (str.++ (int.to.str 0) (str.++ (int.to.str 3) (str.++ (int.to.str 3) (str.++ (int.to.str 9) (int.to.str 9))))))) (str.substr _arg_0 0 3)))
strip-numeric-characters-from-cell.sl,0,(ite (= -1 (str.indexof _arg_0 " " 4)) (str.substr _arg_0 3 7) (str.++ " " (ite (= -1 (str.indexof _arg_0 " " 9)) (str.substr _arg_0 0 9) (str.++ (str.substr _arg_0 6 3) (str.substr _arg_0 9 9))))))
