bikes_small.sl (str.++ (str.substr name 0 (str.len (str.substr name 4 5))) (str.at name (str.len (str.substr name 4 5))))
bikes_small.sl (str.++ (str.substr name 0 5) (str.replace (str.substr name 4 5) (str.substr name 4 5) (str.at name 5)))
bikes_small.sl (str.substr name 0 (- (str.len name) 3))
19274448.sl (str.contains _arg_0 "9999999")
37281007.sl (str.contains _arg_0 _arg_1)
37281007.sl (str.suffixof _arg_0 _arg_1)
bikes.sl (str.substr name 0 (- (str.len name) 3))
bikes.sl (str.++ (str.substr name 0 5) (str.replace (str.substr name 4 5) (str.substr name 4 5) (str.at name 5)))
change-negative-numbers-to-positive.sl (str.replace _arg_0 "-" "")
convert-numbers-to-text.sl (int.to.str _arg_0)
convert-text-to-numbers.sl (str.to.int _arg_0)
count-line-breaks-in-cell.sl (ite (str.prefixof _arg_0 (str.replace _arg_0 "/n" _arg_0)) 1 (ite (str.contains (str.replace _arg_0 "/n" "") "/n") (str.indexof _arg_0 "/n" 1) (str.len "/n")))
count-line-breaks-in-cell.sl (ite (str.suffixof _arg_0 (str.at _arg_0 0)) (+ 1 1) (ite (str.contains _arg_0 "/n") (str.indexof _arg_0 "/n" 1) 1))
count-line-breaks-in-cell.sl (+ 1 (- (str.len _arg_0) (str.len (str.replace (str.replace _arg_0 "/n" " ") "/n" " "))))
count-total-characters-in-a-cell.sl (str.len _arg_0)
dr-name.sl (str.++ "Dr." (str.++ " " (str.substr name 0 (str.indexof name " " 0))))
dr-name.sl (str.++ (str.++ "Dr." " ") (str.substr name 0 (str.indexof name " " 0)))
dr-name_small.sl (str.++ "Dr." (str.++ " " (str.substr name 0 (str.indexof name " " 0))))
dr-name_small.sl (str.++ (str.++ "Dr." " ") (str.substr name 0 (str.indexof name " " 0)))
extract-text-between-parentheses.sl (str.to.int (str.substr (str.replace _arg_0 " " "") (str.indexof _arg_0 "<" 1) (+ 1 1)))
extract-text-between-parentheses.sl (str.to.int (str.substr _arg_0 (+ (str.indexof _arg_0 "<") 1) (+ 1 1)))
firstname.sl (str.substr name 0 (str.indexof name " " 0))
get-first-name-from-name.sl (str.substr _arg_0 0 (str.indexof _arg_0 " " 1))
get-first-word.sl (str.substr _arg_0 0 (str.indexof _arg_0 " " 1))
get-last-name-from-name.sl (str.++ (str.at _arg_0 (+ 1 (str.indexof _arg_0 " " 1))) (str.++ (str.at _arg_0 (+ 1 (+ 1 (str.indexof _arg_0 " " 1)))) (str.at _arg_0 (+ -1 (str.len _arg_0)))))
get-last-name-from-name.sl (str.++ (str.substr (str.replace _arg_0 " " "") (str.indexof _arg_0 " " 1) (+ 1 1)) (str.at (str.++ " " _arg_0) (str.len _arg_0)))
join-first-and-last-name.sl (str.++ _arg_0 (str.++ " " _arg_1))
join-first-and-last-name.sl (str.++ (str.++ _arg_0 " ") _arg_1)
lastname.sl (str.substr name (+ 1 (str.indexof name " " 0)) (str.len name))
lastname.sl (str.replace (str.replace name " " (str.at " " 1)) (str.substr name 0 (str.indexof name " " 0)) (str.at " " 1))
name-combine.sl (str.++ (str.++ firstname " ") lastname)
name-combine.sl (str.++ firstname (str.++ " " lastname))
name-combine_short.sl (str.++ (str.++ firstname " ") lastname)
name-combine_short.sl (str.++ firstname (str.++ " " lastname))
name-combine-2.sl (str.++ (str.++ (str.++ firstname " ") (str.at lastname 0)) ".")
name-combine-2.sl (str.++ (str.++ firstname " ") (str.++ (str.at lastname 0) "."))
name-combine-3.sl (str.++ (str.++ (str.++ (str.at firstname 0) ".") " ") lastname)
name-combine-3.sl (str.++ (str.at firstname 0) (str.++ "." (str.++ " " lastname)))
name-combine-3-long.sl (str.++ (str.++ (str.++ (str.at firstname 0) ".") " ") lastname)
name-combine-3-long.sl (str.++ (str.at firstname 0) (str.++ "." (str.++ " " lastname)))
name-combine-3_short.sl (str.++ (str.++ (str.++ (str.at firstname 0) ".") " ") lastname)
name-combine-3_short.sl (str.++ (str.at firstname 0) (str.++ "." (str.++ " " lastname)))
name-combine-4.sl (str.++ (str.++ (str.++ (str.++ lastname ",") " ") (str.at firstname 0)) ".")
name-combine-4.sl (str.++ (str.++ lastname (str.++ "," " ")) (str.++ (str.at firstname 0) "."))
name-combine-4_short.sl (str.++ (str.++ (str.++ (str.++ lastname ",") " ") (str.at firstname 0)) ".")
name-combine-4_short.sl (str.++ (str.++ lastname (str.++ "," " ")) (str.++ (str.at firstname 0) "."))